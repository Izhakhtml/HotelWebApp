#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelWebApp.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HotelDB")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HotelDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _InvitingId;
		
		private System.Nullable<int> _WorkerNumberTakeOrder;
		
		private System.Nullable<System.DateTime> _DateOrder;
		
		private System.Nullable<int> _paidMoney;
		
		private System.Nullable<int> _TotalMoney;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInvitingIdChanging(System.Nullable<int> value);
    partial void OnInvitingIdChanged();
    partial void OnWorkerNumberTakeOrderChanging(System.Nullable<int> value);
    partial void OnWorkerNumberTakeOrderChanged();
    partial void OnDateOrderChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOrderChanged();
    partial void OnpaidMoneyChanging(System.Nullable<int> value);
    partial void OnpaidMoneyChanged();
    partial void OnTotalMoneyChanging(System.Nullable<int> value);
    partial void OnTotalMoneyChanged();
    #endregion
		
		public Order()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvitingId", DbType="Int")]
		public System.Nullable<int> InvitingId
		{
			get
			{
				return this._InvitingId;
			}
			set
			{
				if ((this._InvitingId != value))
				{
					this.OnInvitingIdChanging(value);
					this.SendPropertyChanging();
					this._InvitingId = value;
					this.SendPropertyChanged("InvitingId");
					this.OnInvitingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkerNumberTakeOrder", DbType="Int")]
		public System.Nullable<int> WorkerNumberTakeOrder
		{
			get
			{
				return this._WorkerNumberTakeOrder;
			}
			set
			{
				if ((this._WorkerNumberTakeOrder != value))
				{
					this.OnWorkerNumberTakeOrderChanging(value);
					this.SendPropertyChanging();
					this._WorkerNumberTakeOrder = value;
					this.SendPropertyChanged("WorkerNumberTakeOrder");
					this.OnWorkerNumberTakeOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOrder", DbType="Date")]
		public System.Nullable<System.DateTime> DateOrder
		{
			get
			{
				return this._DateOrder;
			}
			set
			{
				if ((this._DateOrder != value))
				{
					this.OnDateOrderChanging(value);
					this.SendPropertyChanging();
					this._DateOrder = value;
					this.SendPropertyChanged("DateOrder");
					this.OnDateOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paidMoney", DbType="Int")]
		public System.Nullable<int> paidMoney
		{
			get
			{
				return this._paidMoney;
			}
			set
			{
				if ((this._paidMoney != value))
				{
					this.OnpaidMoneyChanging(value);
					this.SendPropertyChanging();
					this._paidMoney = value;
					this.SendPropertyChanged("paidMoney");
					this.OnpaidMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMoney", DbType="Int")]
		public System.Nullable<int> TotalMoney
		{
			get
			{
				return this._TotalMoney;
			}
			set
			{
				if ((this._TotalMoney != value))
				{
					this.OnTotalMoneyChanging(value);
					this.SendPropertyChanging();
					this._TotalMoney = value;
					this.SendPropertyChanged("TotalMoney");
					this.OnTotalMoneyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
